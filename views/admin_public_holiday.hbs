<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Styling the anchor tag to look like a button */
        #new_data {
            display: inline-block;
            padding: 5px 20px;
            /* Adjust padding as needed */
            background-color: #4CAF50;
            /* Button background color */
            color: white;
            /* Button text color */
            text-align: center;
            text-decoration: none;
            border: none;
            border-radius: 5px;
            /* Rounded corners */
            cursor: pointer;
        }

        .delete_btn {
            background-color: #b30000;
            /* Red background */
            border: none;
            /* No border */
            color: white;
            /* White text */
            padding: 10px 20px;
            /* Padding */
            text-align: center;
            /* Center text */
            text-decoration: none;
            /* No underline */
            display: inline-block;
            /* Display as inline block */
            font-size: 16px;
            /* Font size */
            cursor: pointer;
            /* Cursor on hover */
            border-radius: 5px;
            /* Rounded corners */
            transition-duration: 0.4s;
            /* Transition duration */
        }

        #update_btn {
            background-color: #004080;
            /* Red background */
            border: none;
            /* No border */
            color: white;
            /* White text */
            padding: 10px 20px;
            /* Padding */
            text-align: center;
            /* Center text */
            text-decoration: none;
            /* No underline */
            display: inline-block;
            /* Display as inline block */
            font-size: 16px;
            /* Font size */
            cursor: pointer;
            /* Cursor on hover */
            border-radius: 5px;
            /* Rounded corners */
            transition-duration: 0.4s;
            /* Transition duration */
        }


        /* Styling the anchor tag when hovered */
        .new_data:hover {
            background-color: #45a049;
            /* Darker green */
        }


        /* CSS styles for the close button */
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }



        /* Additional custom styles */
        .popup-form {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            border: 1px solid #ccc;
            padding: 20px;
            border-radius: 5px;
            z-index: 9999;
        }
    </style>
</head>

<body>
    <div class="main-panel">
        <div class="content-wrapper">
            <div class="row">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title">Holiday list </h3>
                        <a id="new_data" type="button" data-toggle="modal" data-target="#HolidayModal">Add Holiday
                        </a>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Name</th>
                                        <th>Related States</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each data}}
                                    <tr>
                                        <td>{{this.holidayName}}</td>
                                        <td>{{this.holidayDate}}</td>
                                        <td>{{this.state}}</td>
                                        <td>
                                            <button type="button" id="update_btn" onclick="UpdateExpense()"
                                                data-toggle="modal" data-target="#UpdateModal">
                                                Edit
                                                <i class="ti-file btn-icon-append"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- ADD data modal -->
        <div class="modal fade" id="HolidayModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
            aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="exampleModalLabel">Add Expense</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Form inside the popup -->
                        <form class="forms-sample" action="/holiday/add" method="Post">
                            <div class="form-group">
                                <label for="holidayDate">Select Date</label>
                                <input type="date" name="holidayDate" id="holidayDate" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="holidayName">Name</label>
                                <input type="text" class="form-control" id="holidayName" name="holidayName"
                                    placeholder="Enter Holiday Name">
                            </div>
                            <div class="form-group">
                                <label for="state"> Select States :</label>
                                <div class="form-group" id="checkboxContainer">
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary me-2">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
</body>

<script>

    let allPermissions = [];
    document.addEventListener('DOMContentLoaded', function () {
        debugger
        fetch('/dynamic-states')
            .then(response => {
                debugger
                // Check if the response is successful (status code between 200 and 299)
                if (response.ok) {
                    return response.json();
                }
                // If the response is not successful, throw an error
                throw new Error('Network response was not ok.');
            })
            .then(data => {
                console.log('Response data:', data);
                const checkboxContainer = document.getElementById('checkboxContainer');
                // Iterate through the data array
                data.forEach(state => {
                    debugger
                    // Create checkbox input element
                    const checkboxElement = document.createElement('input');
                    checkboxElement.type = 'checkbox';
                    checkboxElement.id = `checkbox_${state.id}`;

                    checkboxElement.name = 'permissions[]';
                    checkboxElement.value = state.id;
                    console.log(state.stateName);

                    // Create label for the checkbox
                    const label = document.createElement('label');
                    label.setAttribute('for', `checkbox_${state.id}`);
                    label.textContent = state.stateName; // Access the state name property

                    checkboxElement.addEventListener('change', function () {
                        if (this.checked) {
                            allPermissions.push(this.value);
                        } else {
                            const index = allPermissions.indexOf(this.value);
                            if (index !== -1) {
                                allPermissions.splice(index, 1);
                            }
                        }
                        console.log('All Permissions:', allPermissions);
                    });

                    // Append checkbox and label to container
                    checkboxContainer.appendChild(checkboxElement);
                    checkboxContainer.appendChild(label);
                    // Append line break for better formatting
                    checkboxContainer.appendChild(document.createElement('br'));
                });
            })
            .catch(error => {
                // Log any errors to the console
                console.error('There was a problem with the fetch operation:', error);
            });
    });

</script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>