<!DOCTYPE html>
<html lang="en">

<head>

    <style>
        .row_ {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            /* Align items vertically */
        }

        .search_bar {
            margin-right: 100px;
        }

        .go_button {
            background-color: #007bff;
            /* Blue background color */
            color: white;
            /* White text color */
            border: none;
            /* Remove border */
            padding: 3px 15px;
            /* Add padding */
            cursor: pointer;
            /* Add pointer cursor */
            border-radius: 5px;
            /* Add border radius */

            margin-top: 22px;
        }

        input[type="text"] {
            width: 100px;
            /* Set the width of the input box */
            /* You can adjust the width as needed */
            padding: 5px;
            /* Optional: Add padding for better appearance */
            box-sizing: border-box;
            /* Optional: Include padding and border in the element's total width */
        }

        .table-container {
            width: 500px;
            /* Set the fixed width of the table container */
            overflow-y: auto;
            /* Add vertical scrollbar for overflow */
        }

        table {
            width: 100%;
            /* Table takes full width of its container */
            border-collapse: collapse;
        }

        th,
        td {
            padding: 8px;
            /* Add padding for better readability */

            text-align: left;
            /* Align text to the left */
        }

        #hidden_td {
            display: none;
        }
    </style>
</head>

<body>
    <div class="main-panel">
        <div class="content-wrapper">
            <div class="row">
                <div class="col-lg-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title">Employee Info</h3>

                            <form class="forms-sample" action="/Payroll/salaryDetails" method="post">
                                <div class="row_">
                                    <div class="search_bar">

                                        <label for="id">Employee :</label>
                                        <select class="form-select" id="Employee_" name="Employee_id" required>
                                            <option value="">Select </option>
                                        </select>
                                    </div>
                                    <div class="search_bar">

                                        <label for="month">Month :</label>
                                        <select class="form-select" id="Month_" name="month" required>
                                            <option value="">Select </option>
                                        </select>

                                    </div>
                                    <div class="search_bar">

                                        <label for="year">Year :</label>
                                        <select class="form-select" id="year_" name="year" required>
                                            <option value="">Select </option>
                                        </select>

                                    </div>

                                    <button type="submit" class="go_button" id="goButton">Go</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>


                <div class="col-lg-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Payroll Info</h4>
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Employee name</th>
                                            <th>Month-year</th>
                                            <th>Base salary</th>
                                            <th>Bonus</th>
                                            <th>Allowance</th>
                                            <th>Deduction</th>
                                            <th>PF</th>
                                            <th>Absent Deduction</th>
                                            <th>Net salary</th>
                                            <th>Remark</th>

                                            <th>Action</th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        {{#each Payroll}}
                                        <tr>
                                            <td id="employeeName"></td>
                                            <td id="hidden_td"> <input class="form-control" type="hidden"
                                                    value="{{this.employee}}" id="employeeId"></td>

                                            <td>{{this.month}} - {{this.year}}</td>
                                            <td id="hidden_td"> <input class="form-control" type="hidden"
                                                    value="{{this.month}}" id="month"></td>
                                            <td id="hidden_td"> <input class="form-control" type="hidden"
                                                    value="{{this.year}}" id="year"></td>

                                            <td><input class="form-control" type="text" value="{{this.basic}}"
                                                    id="basic" placeholder="00">
                                            </td>
                                            <td><input class="form-control" type="text" value="{{this.bonus}}"
                                                    id="bonus" placeholder="00">
                                            </td>
                                            <td><input class="form-control" type="text" value="{{this.allowance}}"
                                                    id="allowance" placeholder="00"></td>
                                            <td><input class="form-control" type="text" value="{{this.deduction}}"
                                                    id="deduction" placeholder="00"></td>
                                            <td><input class="form-control" type="text" value="{{PF}}" id="PF"
                                                    placeholder="00"></td>
                                            <td><input class="form-control" type="text" value="{{absentDeduction}}"
                                                    id="absentDeduction" placeholder="00">
                                            </td>
                                            <td><input class="form-control" type="text" id="netSalary" readonly></td>

                                            <td><input class="form-control" type="text" id="remark"></td>

                                            <td>
                                                <button class=" btn-success btn-sm btn-rounded"
                                                    id="add_payroll">submit</button>
                                            </td>

                                        </tr>
                                        {{/each}}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const employeeId = document.getElementById('employeeId').value;
            const employeeName = document.getElementById('employeeName');

            // Function to fetch employee name
            async function fetchEmployeeName(employeeId) {
                console.log('employee id:', employeeId);
                try {
                    // Replace this with your actual API endpoint to fetch employee name
                    const response = await fetch(`/Payroll/employeeName`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ employeeId: employeeId })
                    });
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    const data = await response.json();

                    console.log('data in script :', data[0]);
                    return data[0].employeeName; // Assuming the API returns the employee name
                } catch (error) {
                    console.error('Error fetching employee name:', error);
                    return ''; // Return empty string if there's an error
                }
            }

            // Get employee name and update the DOM
            try {
                const name = await fetchEmployeeName(employeeId);
                employeeName.textContent = name;
            } catch (error) {
                console.error('Error updating employee name:', error);
            }





            const submitButton = document.querySelector('#add_payroll');

            submitButton.addEventListener('click', function () {


                // Get values from inputs
                const employeeId = document.getElementById('employeeId').value;
                const month = document.getElementById('month').value;
                const year = document.getElementById('year').value;
                const basic = document.getElementById('basic').value;
                const bonus = document.getElementById('bonus').value || "0";
                const allowance = document.getElementById('allowance').value || "0";
                const deduction = document.getElementById('deduction').value || "0";
                const PF = document.getElementById('PF').value || "0";
                const absentDeduction = document.getElementById('absentDeduction').value || "0";
                const netSalary = document.getElementById('netSalary').value || "0";
                const remark = document.getElementById('remark').value;

                // Prepare data object
                const data = {
                    employeeId: employeeId,
                    month: month,
                    year: year,
                    basic: basic,
                    bonus: bonus,
                    allowance: allowance,
                    deduction: deduction,
                    PF: PF,
                    absentDeduction: absentDeduction,
                    netSalary: netSalary,
                    remark: remark
                };

                console.log("data :", data)
                // Send data to server
                fetch('/Payroll/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        // Handle successful response (if needed)
                        console.log('Data submitted successfully');
                    })
                    .catch(error => {
                        // Handle error
                        console.error('There was a problem with your fetch operation:', error);
                    });
            });




            // Get input fields
            const basicInput = document.getElementById('basic');
            const bonusInput = document.getElementById('bonus');
            const allowanceInput = document.getElementById('allowance');
            const deductionInput = document.getElementById('deduction');
            const PFInput = document.getElementById('PF');
            const absentDeductionInput = document.getElementById('absentDeduction');
            const netSalaryInput = document.getElementById('netSalary');

            // Function to calculate net salary
            function calculateNetSalary() {
                const basic = parseFloat(basicInput.value) || 0;
                const bonus = parseFloat(bonusInput.value) || 0;
                const allowance = parseFloat(allowanceInput.value) || 0;
                const deduction = parseFloat(deductionInput.value) || 0;
                const PF = parseFloat(PFInput.value) || 0;
                const absentDeduction = parseFloat(absentDeductionInput.value) || 0;

                // Calculate net salary
                const totalEarnings = basic + bonus + allowance;
                const totalDeductions = deduction + PF + absentDeduction;
                const netSalary = totalEarnings - totalDeductions;

                // Display net salary
                netSalaryInput.value = netSalary.toFixed(2);
            }

            // Add event listeners to input fields
            basicInput.addEventListener('input', calculateNetSalary);
            bonusInput.addEventListener('input', calculateNetSalary);
            allowanceInput.addEventListener('input', calculateNetSalary);
            deductionInput.addEventListener('input', calculateNetSalary);
            PFInput.addEventListener('input', calculateNetSalary);
            absentDeductionInput.addEventListener('input', calculateNetSalary);

            // Initial calculation
            calculateNetSalary();



        });

    </script>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            // Fetch employees and populate the Employee dropdown
            fetch('/Leave-balance/employee')
                .then(response => response.json())
                .then(data => {
                    const employeeDropdown = document.getElementById('Employee_');
                    data.forEach(employee => {
                        const option = document.createElement('option');
                        option.value = employee.id;
                        option.textContent = employee.fullName; 
                        employeeDropdown.appendChild(option);
                    });
                })
                .catch(error => console.error('Error fetching employees:', error));

            // Fetch months and populate the Month dropdown
            fetch('/Leave-balance/month')
                .then(response => response.json())
                .then(data => {
                    const monthDropdown = document.getElementById('Month_');
                    data.forEach(month => {
                        const option = document.createElement('option');
                        option.value = month.id;
                        option.textContent = month.monthName; // Assuming 'monthName' is the property containing the month's name
                        monthDropdown.appendChild(option);
                    });
                })
                .catch(error => console.error('Error fetching months:', error));

            // Populate the Year dropdown
            const yearDropdown = document.getElementById("year_");
            function populateYearDropdown(startYear, endYear) {
                for (let year = startYear; year <= endYear; year++) {
                    const option = document.createElement("option");
                    option.text = year;
                    option.value = year;
                    yearDropdown.appendChild(option);
                }
            }
            populateYearDropdown(2020, 2025);

            // Other code for calculating net salary and submitting payroll data goes here
        });
    </script>


    <!-- Bootstrap JS (jQuery and Popper.js are required too) -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>

</html>