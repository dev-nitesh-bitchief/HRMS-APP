<!DOCTYPE html>
<html lang="en">

<head>
 <link rel="stylesheet" href="../design/vendors/feather/feather.css">
  <link rel="stylesheet" href="../design/vendors/mdi/css/materialdesignicons.min.css">
  <link rel="stylesheet" href="../design/vendors/ti-icons/css/themify-icons.css">
  <link rel="stylesheet" href="../design/vendors/typicons/typicons.css">
  <link rel="stylesheet" href="../design/vendors/simple-line-icons/css/simple-line-icons.css">
  <link rel="stylesheet" href="../design/vendors/css/vendor.bundle.base.css">
  <!-- endinject -->
  <!-- Plugin css for this page -->
  <!-- End plugin css for this page -->
  <!-- inject:css -->
  <link rel="stylesheet" href="../design/css/vertical-layout-light/style.css">
  <!-- endinject -->
  <link rel="shortcut icon" href="../design/images/favicon.png" />
  <style>
    /* Styling the anchor tag to look like a button */
    .btn-dark {
      display: inline-block;
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      text-align: center;
      text-decoration: none;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    /* Styling the anchor tag when hovered */
    .btn-dark:hover {
      background-color: #45a049;
    }

    /* Styling the actions column */
    .actions {
      text-align: right;
    }

    select {
      width: 100%;
      padding: 10px;
      font-size: 14px;
      margin-bottom: 15px;
    }


    /* Styling the anchor tag to look like a button */
    .new_data {
      display: inline-block;
      padding: 10px 20px;
      /* Adjust padding as needed */
      background-color: #4CAF50;
      /* Button background color */
      color: white;
      /* Button text color */
      text-align: center;
      text-decoration: none;
      border: none;
      border-radius: 5px;
      /* Rounded corners */
      cursor: pointer;
    }

    /* Styling the anchor tag when hovered */
    .new_data:hover {
      background-color: #45a049;
      /* Darker green */
    }

    /* CSS styles for the close button */
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }


    #form-container {
      display: none;
      /* Hide the form by default */


    }
  </style>
  <style>
    /* Dropdown Button */
    .dropbtn {
      background-color: #04AA6D;
      color: white;
      padding: 16px;
      font-size: 16px;
      border: none;
      cursor: pointer;
    }

    /* Dropdown button on hover & focus */
    .dropbtn:hover,
    .dropbtn:focus {
      background-color: #3e8e41;
    }

    /* The search field */
    #myInput {
      box-sizing: border-box;
      background-image: url('searchicon.png');
      background-position: 14px 12px;
      background-repeat: no-repeat;
      font-size: 16px;
      padding: 14px 20px 12px 45px;
      border: none;
      border-bottom: 1px solid #ddd;
    }

    /* The search field when it gets focus/clicked on */
    #myInput:focus {
      outline: 3px solid #ddd;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
      position: relative;
      display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
      /* display: none; */
      position: absolute;
      background-color: #f6f6f6;
      min-width: 230px;
      border: 1px solid #ddd;
      z-index: 1;
    }

    /* Links inside the dropdown */
    .dropdown-content a {
      color: black;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
    }

    /* Change color of dropdown links on hover */
    .dropdown-content a:hover {
      background-color: #f1f1f1
    }

    /* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
    .show {
      display: block;
    }
  </style>
</head>

<body>
  <div class="main-panel">
    <div class="content-wrapper">
      <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
          <div class="card">
            <div class="card-body">
              <h4 class="card-title">Salary</h4>
              <div class="table-responsive">
                <table class="table">
                  <thead>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addRoleModal">
                      Add New salary <span class="mdi mdi-currency-inr"></span></button>
                    <tr>
                      <th>Id:</th>
                      <th>employee_name</th>
                      <th>salary_type</th>
                      <th>salaryAmount</th>
                      <th>salaryCycle</th>
                      <th class="actions">Actions</th>
                    </tr>
                  </thead>
                  <tbody>
                    {{#each salary}}
                    <tr>
                      <td>{{this.id}}</td>
                      <td>{{this.employee_name}}</td>
                      <td>{{this.salary_type}}</td>
                      <td>{{this.salaryAmount}}</td>
                      <td>{{this.salaryCycle}}</td>
                       <td class="actions">
                               <div class="dropdown">
                      <button class="btn btn-danger btn-sm dropdown-toggle" type="button" id="dropdownMenuSizeButton3" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Action
                      </button>
                      <div class="dropdown-menu" aria-labelledby="dropdownMenuSizeButton3">
                        <a class="dropdown-item" onclick="UpdateForm('{{this.id}}','{{this.salaryAmount}}','{{this.salaryCycle}}')"
                          data-toggle="modal" data-target="#updateUserModal">edit</a>
                        <a class="dropdown-item" data-toggle="modal"
                          data-target="#deleteidModal" onclick="openDeleteModal('{{this.id}}')">Delete</a>
                      </div>
                    </div>
                     </td> 
                    </tr>
                    {{/each}}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- add Modal -->
  <div class="modal fade" id="addRoleModal" tabindex="-1" role="dialog" aria-labelledby="addRoleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addRoleModalLabel">salary info</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form class="forms-sample" action="/Salary/addsalary" method="post">
          <div class="form-group">
              <label for="Employee_id">Employee Name</label>
              <select class="form-select" id="Employee_id" name="Employee_id">
                <option value="">Select Employee </option>
              </select>
            </div>

            <div class="form-group">
                    <label>Single select box using select 2</label>
                    <select class="js-example-basic-single w-100">
                      <option value="AL">Alabama</option>
                      <option value="WY">Wyoming</option>
                      <option value="AM">America</option>
                      <option value="CA">Canada</option>
                      <option value="RU">Russia</option>
                    </select>
                  </div>

            <div class="form-group">
              <label for="salary_type">Select Type:</label>
              <select class="form-select" id="salary_type" name="SalaryType_id">
                <option value="">Select </option>
              </select>
            </div>
            <div class="form-group">
              <label for="salaryAmount">salaryAmount</label>
              <input type="text" class="form-control" id="salaryAmount1" name="salaryAmount" placeholder="salaryAmount">
            </div>
            <div class="form-group">
              <label for="salaryCycle">salaryCycle</label>
              <input type="text" class="form-control" id="salaryCycle2" name="salaryCycle" placeholder="salaryCycle">
            </div>
            <button type="submit" class="btn btn-primary me-2" onclick="showToast(successfully added)">Submit</button>
          </form>
        </div>
        <div id="toast" class="toast"></div>
      </div>
    </div>
  </div>
  {{!--Â --}}

  <!-- Delete Modal -->
  <div class="modal fade" id="deleteidModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteModalLabel">Delete Record</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="deleteForm" action="/salary/deletesalary" method="post">
            <div class="form-group">
              <label for="id">Are you sure:</label>
              <input type="hidden" id="recordid" name="id" value="{{this.id}}">
              <p id="recordidDisplay"></p>
            </div>
            <button type="submit" class="btn btn-danger">Delete</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Update Modal -->
  <div class="modal fade" id="updateUserModal" tabindex="-1" role="dialog" aria-labelledby="updateUserModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="updateUserModalLabel">Update salary</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form action="/salary/updatesalary" method="post">
            <div class="form-group">
              <input type="hidden" class="form-control" id="id" name="id">
            </div>
            <div class="form-group">
              <label for="salaryAmount">salaryAmount:</label>
              <input type="text" class="form-control" id="salaryAmount" name="salaryAmount" placeholder="salaryAmount">
            </div>
            <div class="form-group">
              <label for="salaryCycle">salaryCycle:</label>
              <input type="text" class="form-control" id="salaryCycle" name="salaryCycle" placeholder="salaryCycle">
            </div>
            <button type="submit" class="btn btn-warning">Update Employee</button>
          </form>
        </div>
      </div>
    </div>
  </div>




  <script>
    // Fetch data from the server and populate the dropdown
fetch('/employee/show')
  .then(response => response.json())
  .then(data => {
    console.log(data);
    employeeData = data;
    const employeeDropdown = document.getElementById('Employee-id');

    // Function to filter options based on search input
    function filterOptions(searchInput) {
      const filteredData = data.filter(employee => employee.employeeName.toLowerCase().includes(searchInput.toLowerCase()));
      employeeDropdown.innerHTML = ''; // Clear existing options
      filteredData.forEach(employee => {
        const option = document.createElement('option');
        option.value = employee.id;
        option.text = employee.employeeName;
        employeeDropdown.appendChild(option);
      });
    }

    // Populate initial options
    data.forEach(employee => {
      const option = document.createElement('option');
      option.value = employee.id;
      option.text = employee.employeeName;
      employeeDropdown.appendChild(option);
    });

    // Add an event listener to the dropdown for validation and search
    employeeDropdown.addEventListener('input', function () {
      const searchInput = this.value;
      filterOptions(searchInput);
    });
  })
  .catch(error => console.error('Error fetching data:', error));


      document.addEventListener('DOMContentLoaded', function () {
        // Fetch data from the server and populate the dropdown
        fetch('/salarytype/allsalarytype')
          .then(response => response.json())
          .then(data => {
            const roleDropdown = document.getElementById('salary_type');
            data.forEach(Type => {
              const option = document.createElement('option');
              option.value = Type.id;
              option.textContent = Type.salary_type;
              roleDropdown.appendChild(option);
            });
          })
          .catch(error => console.error('Error fetching data:', error));
      });

      function openDeleteModal(recordid) {
        document.getElementById('recordid').value = recordid;
        document.getElementById('recordidDisplay').innerText = ' ID: ' + recordid;
        $('#deleteidModal').modal('show');
      }


      // Function to open the form
      function openForm() {
        document.getElementById("form-container").style.display = "block";
      }

      // Function to close the form
      function closeForm() {
        document.getElementById("form-container").style.display = "none";
      }


      function UpdateForm(id, salaryAmount, salaryCycle) {
        document.getElementById('id').value = id;
        document.getElementById('salaryAmount').value = salaryAmount;
        document.getElementById('salaryCycle').value = salaryCycle;
        $('#updateUserModal').modal('show');
      };


   document.addEventListener('DOMContentLoaded', function () {
      // Fetch data from the server and populate the dropdown
      fetch('/employee/show')
        .then(response => response.json())
        .then(data => {
          const roleDropdown = document.getElementById('Employee_id');
          data.forEach(drop => {
            const option = document.createElement('option');
            option.value = drop.id;
            option.textContent = drop.employeeName;
            roleDropdown.appendChild(option);
          });
        })
        .catch(error => console.error('Error fetching data:', error));
    });


  </script>
  
</body>

</html>