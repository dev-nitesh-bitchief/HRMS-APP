<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Star Admin2 </title>
  <!-- plugins:css -->
  <link rel="stylesheet" href="../design/vendors/feather/feather.css">
  <link rel="stylesheet" href="../designvendors/mdi/css/materialdesignicons.min.css">
  <link rel="stylesheet" href="../designvendors/ti-icons/css/themify-icons.css">
  <link rel="stylesheet" href="../designvendors/typicons/typicons.css">
  <link rel="stylesheet" href="../designvendors/simple-line-icons/css/simple-line-icons.css">
  <link rel="stylesheet" href="../designvendors/css/vendor.bundle.base.css">
  <!-- endinject -->
  <!-- Plugin css for this page -->
  <!-- End plugin css for this page -->
  <!-- inject:css -->
  <link rel="stylesheet" href="../css/vertical-layout-light/style.css">
  <!-- endinject -->
  <link rel="shortcut icon" href="../images/favicon.png" />
<style>
  /* Styling the anchor tag to look like a button */
  .new_data {
    display: inline-block;
    padding: 10px 20px;
    /* Adjust padding as needed */
    background-color: #4CAF50;
    /* Button background color */
    color: white;
    /* Button text color */
    text-align: center;
    text-decoration: none;
    border: none;
    border-radius: 5px;
    /* Rounded corners */
    cursor: pointer;
  }

  /* Styling the anchor tag when hovered */
  .new_data:hover {
    background-color: #45a049;
    /* Darker green */
  }

  /* CSS styles for the close button */
  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }


  #form-container {
    display: none;
    /* Hide the form by default */

  }

  /* Styling the actions column */
  .actions {
    text-align: right;
  }
</style>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="main-panel">
    <div class="content-wrapper">
      <div class="row">
        <div class="">
          <div class="card">
            <div class="card-body">
              <h3 class="card-title">Permissions</h3>
              {{!-- <a class="new_data" onclick="openForm()">Add new Role </a> --}}
              <!-- Button to trigger the modal -->
              <button type="button" class="btn btn-primary btn-rounded btn-fw" data-toggle="modal"
                data-target="#addRoleModal"><span class="mdi mdi-account-plus"></span>
                Add New Permission
              </button>

              <div class="table-responsive">
                <table class="table">
                  <thead>
                    <tr>
                      <th>Id:</th>
                      <th>Permission-Name:</th>
                      <th class="actions">Action</th>
                    </tr>
                  </thead>
                  <tbody>

                    {{#each permissions}}
                    <tr>
                      <td>{{this.id}}</td>
                      <td>{{this.permissionName}}</td>
                   <td class="actions">
                               <div class="dropdown">
                      <button class="btn btn-success btn-sm dropdown-toggle" type="button" id="dropdownMenuSizeButton3" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Action
                      </button>
                      <div class="dropdown-menu" aria-labelledby="dropdownMenuSizeButton3">
                        <button type="button" class="dropdown-item" onclick="UpdateForm('{{this.id}}','{{this.permissionName}}')" data-toggle="modal"
                          data-target="#updatePermissionModal">Update Permission</button>

                        <button type="button" class="dropdown-item" data-toggle="modal"
                          data-target="#deleteModal" onclick="openDeleteModal('{{this.id}}')">Delete</button>
                      </div>
                    </div>
                     </td>
                   
                      {{!-- <td class="actions"> <!-- Button to trigger the modal -->
                        <button type="button" class="btn btn-danger btn-rounded btn-fw" data-toggle="modal"
                          data-target="#deleteModal" onclick="openDeleteModal('{{this.id}}')"><span
                            class="mdi mdi-account-minus"></span>
                          Delete Record
                        </button>
                        <!-- Button to trigger the modal -->
                        <button type="button" class="btn btn-success btn-rounded btn-fw" data-toggle="modal"
                          data-target="#updatePermissionModal"
                          onclick="UpdateForm('{{this.id}}', '{{this.permissionName}}')">
                          <span class="mdi mdi-account-convert"></span> Update Permissions-Name
                        </button>
                      </td> --}}
                    </tr>
                    {{/each}}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>

        {{!-- Add model --}}
        <div class="modal fade" id="addRoleModal" tabindex="-1" role="dialog" aria-labelledby="addRoleModalLabel"
          aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="addRoleModalLabel">Add New Permission</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="addForm" class="forms-sample">
                  <div class="form-group">
                    <label for="permissionName">permissionName:</label>
                    <input type="text" class="form-control" id="permissionName" name="permissionName"
                      placeholder="permissionName">
                  </div>
                  <button type="submit" class="btn btn-primary me-2">Submit</button>
                </form>
              </div>
            </div>
          </div>
        </div>
        {{!-- --}}
        <!-- Delete Modal -->
        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel"
          aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Record</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="deleteForm" action="/permission/delete" method="post">
                  <div class="form-group">
                    {{!-- <label for="username">Are you sure:</label> --}}
                    <input type="hidden" id="id" name="id" value="{{this.id}}">
                    <!-- Hidden input field to store record ID -->
                    <p id="idDisplay"></p> <!-- Paragraph to display record ID -->
                  </div>
                  <button type="submit" class="btn btn-danger">Delete</button>
                </form>
              </div>
            </div>
          </div>
        </div>
        {{!-- --}}

        <!-- update Modal -->
        <div class="modal fade" id="updatePermissionModal" tabindex="-1" role="dialog"
          aria-labelledby="updatePermissionModalLabel" aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="updatePermissionModalLabel">Update Permission-Name</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="uploadForm">
                  <div class="form-group">
                    <label for="id"> ID:</label>
                    <input type="text" class="form-control" id="pre-id" name="id_" placeholder="Enter ID">
                  </div>
                  <div class="form-group">
                    <label for="permissionName">permission Name:</label>
                    <input type="text" class="form-control" id="pre-permissionName" name="permissionName_"
                      placeholder="Enter permission Name">
                  </div>

                  <button type="submit" class="btn btn-warning">Update permission</button>
                </form>
              </div>
            </div>
          </div>
        </div>
        {{!-- --}}
      </div>
    </div>
  </div>

  <script>
      // Function to open the form
      function openForm() {
        document.getElementById("form-container").style.display = "block";
      }

      // Function to close the form
      function closeForm() {
        document.getElementById("form-container").style.display = "none";
      }

      function openDeleteModal(id) {
        // Set the record ID in the form and display it in the paragraph
        document.getElementById('id').value = id;
        document.getElementById('idDisplay').innerText = 'Are you sure want to delete: ' + id;
        // Show the modal
        $('#deleteModal').modal('show');
      }
      //function to prefill the update  form:
   function UpdateForm(id, permissionName) {
        console.log(id);
        console.log(permissionName);

        // Fill the input fields with the data
        document.getElementById('pre-id').value = id;
        document.getElementById('pre-permissionName').value = permissionName;

        // Show the modal containing the form
        $('#updatePermissionModal').modal('show');
      }
    
    document.addEventListener('DOMContentLoaded', function () {
      showToast('permission');
      //------------------------------------------------------------
      document.getElementById('addForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const formData = new FormData(this); // Get form data

        // Create an empty object to store form data
        const formDataObject = {};

        // Iterate over FormData entries and store them in the object
        for (let [key, value] of formData.entries()) {
          // If the key does not exist, simply assign the value to the key
          formDataObject[key] = value;
        }

        // Now you can use formDataObject to access form data
        console.log(formDataObject);

        fetch('/permission/add', {
          method: 'POST',
          headers: {
            "content-Type": "application/json"
          },
          body: JSON.stringify(formDataObject)
        })
          .then(response => {
            debugger
            if (response.ok) {
              showToast('Add successful');
              window.location.href = '/permission';
            } else {
              debugger
              response.json().then(data => {
                console.log(data);
                // Display an error message if login fails
                if (!data.success) {
                  debugger
                  showToast(data.message);
                } else {
                  showToast('An error occurred. Please try again later.');
                }
              }).catch(error => {
                debugger
                showToast('An error occurred. Please try again later.');
              });
            }
          })
          .catch(error => {
            debugger
            // Handle any errors that occur during the API request
            console.error('Error:', error);
            showToast('An error occurred. Please try again later.');
          });
      });
      //--------------------------------------------
      document.getElementById('uploadForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const formData = new FormData(this); // Get form data

        // Create an empty object to store form data
        const formDataObject = {};

        // Iterate over FormData entries and store them in the object
        for (let [key, value] of formData.entries()) {
          // If the key does not exist, simply assign the value to the key
          formDataObject[key] = value;
        }

        // Now you can use formDataObject to access form data
        console.log(formDataObject);

        fetch('/permission/update', {
          method: 'POST',
          headers: {
            "content-Type": "application/json"
          },
          body: JSON.stringify(formDataObject)
        })
          .then(response => {
            debugger
            if (response.ok) {
              showToast('update successful');
              window.location.href = '/permission';
            } else {
              debugger
              response.json().then(data => {
                console.log(data);
                // Display an error message if login fails
                if (!data.success) {
                  debugger
                  showToast(data.message);
                } else {
                  showToast('An error occurred. Please try again later.');
                }
              }).catch(error => {
                debugger
                showToast('An error occurred. Please try again later.');
              });
            }
          })
          .catch(error => {
            debugger
            // Handle any errors that occur during the API request
            console.error('Error:', error);
            showToast('An error occurred. Please try again later.');
          });
      });
      //--------------------------------


    });
  </script>

  <!-- Bootstrap JS and jQuery -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>