<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        /* Body styles */
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background-color: #f0f7ff;
            /* Light blue background color */
        }

        /* Login container styles */
        .login-container {
            width: 300px;
            margin: 100px auto;
            /* Centering the container */
            background-color: #ffffff;
            /* White background color */
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            /* Box shadow for a subtle effect */
        }

        /* Header styles */
        .login-header {
            text-align: center;
            margin-bottom: 20px;
        }

        /* Input field styles */
        input[type="text"],
        input[type="password"] {
            width: calc(100% - 40px);
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        /* Button styles */
        button {
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            /* Blue button color */
            color: #fff;
            /* Text color */
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }

        /* Button hover effect */
        button:hover {
            background-color: #0056b3;
            /* Darker shade of blue on hover */
        }
    </style>
</head>

<body>
    <div class="login-container">
        <div class="login-header">
            <h2>Login</h2>
        </div>
        <form action="/login" method="post">
            <input type="text" name="user_name" placeholder="Username" required>
            <input type="password" name="password" placeholder="Password" required>
            <button type="submit">Login</button>
        </form>
    </div>

    <script>

        // Function to fetch IP address using ipify API


        function fetchIPAddress() {

            return fetch('https://api.ipify.org?format=json')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch IP address');
                    }
                    return response.json();
                })
                .then(data => data.ip)
                .catch(error => {
                    console.error('Error fetching IP address:', error);
                    return null;
                });
        }




        // Function to fetch user's location using Geolocation API
        function fetchLocation() {
            return new Promise((resolve, reject) => {
                navigator.geolocation.getCurrentPosition(position => {
                    const { latitude, longitude } = position.coords;
                    resolve({ latitude, longitude });
                }, error => {
                    console.error('Error fetching location:', error);
                    reject(error);
                });
            });
        }


        // Function to fetch browser details
        function fetchBrowserDetails() {
            const browserDetails = navigator.userAgent;
            return browserDetails;
        }

        // Fetch IP address, location, and browser details, then store them in local storage
        Promise.all([fetchIPAddress(), fetchLocation(), fetchBrowserDetails()])
            .then(([ipAddress, location, browserDetails]) => {

                console.log('IP Address:', ipAddress);
                console.log('Location:', location.latitude);
                console.log('Location:', location.longitude);
                console.log('Browser Details:', browserDetails);
                debugger

                // Send data to server
                fetch('/Leave/save-data', {



                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ ipAddress, location, browserDetails })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to send data to server');
                        }
                        console.log('Data sent to server successfully');
                    })
                    .catch(error => console.error('Error sending data to server:', error));
            })
            .catch(error => console.error('Error:', error));

    </script>
</body>

</html>