<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login Page</title>
  <!-- Bootstrap CSS -->
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <!-- Custom CSS -->
  <style>
    body, html {
      height: 100%;
      font-family: Arial, sans-serif;
    }
    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .card {
      border: none;
      border-radius: 15px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      animation: fadeIn 1s ease-out;
    }
    .card-header {
      background-color: #007bff;
      color: white;
      border-radius: 15px 15px 0 0;
    }
    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
      border-radius: 20px;
    }
    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .toast {
      visibility: hidden;
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background-color: #f44336; /* Red */
      color: white;
      text-align: center;
      padding: 16px;
      border-radius: 8px;
      z-index: 1;
    }

    .show {
      visibility: visible;
      animation: fadein 0.5s, fadeout 0.5s 2.5s;
    }

    @keyframes fadein {
      from { bottom: 0; opacity: 0; }
      to { bottom: 20px; opacity: 1; }
    }

    @keyframes fadeout {
      from { bottom: 20px; opacity: 1; }
      to { bottom: 0; opacity:0;}
}
  </style>
</head>
<body>
  <div class="container">
    <div class="col-md-6">
      <div class="card">
        <div class="card-header">
          <h5 class="card-title text-center">Login</h5>
        </div>
        <div class="card-body">
          <form id="loginForm" >
            <div class="form-group">
              <label for="username">Username</label>
              <input type="text" class="form-control" id="username" name="username" required>
            </div>
            <div class="form-group">
              <label for="password">Password</label>
              <input type="password" class="form-control" id="password" name="password" required>
            </div>
            <button type="submit" class="btn btn-primary btn-block">Login</button>
          </form>
        </div>
        <div id="toast"  class="toast"></div>
      </div>
    </div>
  </div>
  <script>
    document.getElementById('loginForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent form submission until API response is received

    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;

    if (!username || !password) {
      showToast('Please enter both username and password.');
      return; // Exit the function if username or password is empty
      }
fetch('/log', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ username: username, password: password })
    })
   .then(response => {
  if (response.ok) {
    debugger
    // Redirect to the employee page if login is successful
    window.location.href = '/index';
  } else {
    response.json().then(data => {
      console.log(data);
      // Display an error message if login fails
      if (!data.success) {
        debugger
        showToast(data.message);
      } else {
        showToast('An error occurred. Please try again later.');
      }
    }).catch(error => {
      debugger

      showToast('An error occurred. Please try again later.');
    });
  }
})

    .catch(error => {
      debugger
      // Handle any errors that occur during the API request
      console.error('Error:', error);
      showToast('An error occurred. Please try again later.');
    });
  });

  function showToast(message) {
    const toast = document.getElementById('toast');
    toast.innerHTML = message;
    toast.classList.add('show');
    setTimeout(() => {
      toast.classList.remove('show');
    }, 3000); // Hide toast after 3 seconds (adjust as needed)
}
  </script>
</body>
</html>
